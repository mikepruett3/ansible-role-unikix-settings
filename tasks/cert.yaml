---
# Certificate tasks file for ansible-role-unikix-settings

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yaml"

- name: "Get TNServer*CertificateFile path from {{ unikixrc }}"
  ansible.builtin.shell:
    cmd: grep -i "TNServer" {{ unikixrc }} | grep -i "CertificateFile" | grep -v "!"
  register: output
  changed_when: output.rc != 0

- name: "Set facts based on TNServer*CertificateFile output"
  ansible.builtin.set_fact:
    ssl_certificate: "{{ output.stdout }}"
    ssl_certificate_file: "{{ output.stdout.split(':')[1].lstrip(' ').rsplit('/', 1)[1].rstrip('\"') }}"
    ssl_certificate_path: "{{ output.stdout.split(':')[1].lstrip(' ').rsplit('/', 1)[0].lstrip('\"') }}"

- name: "Get TNServer*PrivateKeyFile path from {{ unikixrc }}"
  ansible.builtin.shell:
    cmd: grep -i "TNServer" {{ unikixrc }} | grep -i "PrivateKeyFile" | grep -v "!"
  register: output
  changed_when: output.rc != 0

- name: "Set facts based on TNServer*PrivateKeyFile output"
  ansible.builtin.set_fact:
    ssl_key: "{{ output.stdout }}"
    ssl_key_file: "{{ output.stdout.split(':')[1].lstrip(' ').rsplit('/', 1)[1].rstrip('\"') }}"
    ssl_key_path: "{{ output.stdout.split(':')[1].lstrip(' ').rsplit('/', 1)[0].lstrip('\"') }}"

#- name: "Print returned information"
#  ansible.builtin.debug:
#    msg:
#      - "{{ ssl_certificate }}"
#      - "{{ ssl_certificate_path }}"
#      - "{{ ssl_certificate_file }}"
#      - "{{ ssl_key }}"
#      - "{{ ssl_key_path }}"
#      - "{{ ssl_key_file }}"

- name: "Upload Certificates to {{ inventory_hostname }}"
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0644'
  with_items:
    - src: "{{ certificate_file }}"
      dest: "{{ ssl_certificate_path }}/"
    - src: "{{ certificate_key }}"
      dest: "{{ ssl_key_path }}/"

- name: "Update {{ unikixrc }} with new Certificate files"
  ansible.builtin.lineinfile:
    dest: "{{ unikixrc }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: '0640'
    backup: no
  with_items:
    - regexp: "^TNServer\\*CertificateFile:"
      line: "TNServer*CertificateFile:\t\t{{ ssl_certificate_path }}/{{ certificate_file.rsplit('/', 1)[1] }}\""
    - regexp: "^TNServer\\*PrivateKeyFile:"
      line: "TNServer*PrivateKeyFile:\t\t{{ ssl_key_path }}/{{ certificate_key.rsplit('/', 1)[1] }}\""
  #notify: "Restart Apache HTTP Server Daemon"
